import{_ as n,c as s,o as a,d as e}from"./app-D36vkrbi.js";const t={},p=e(`<h1 id="breeze-in-api" tabindex="-1"><a class="header-anchor" href="#breeze-in-api"><span>Breeze in API</span></a></h1><h2 id="install-breeze-package" tabindex="-1"><a class="header-anchor" href="#install-breeze-package"><span>Install Breeze Package</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> require laravel/breeze</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="install-breeze" tabindex="-1"><a class="header-anchor" href="#install-breeze"><span>Install Breeze</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">php artisan breeze:install</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Then choose &#39;Api only&#39;</p></blockquote><h2 id="configuring-breeze" tabindex="-1"><a class="header-anchor" href="#configuring-breeze"><span>Configuring Breeze</span></a></h2><h4 id="open-the-bootstrap-app-php-file" tabindex="-1"><a class="header-anchor" href="#open-the-bootstrap-app-php-file"><span>Open the bootstrap/app.php file</span></a></h4><blockquote><p>Remove or comment the &#39;EnsureFrontendRequestsAreStateful&#39; middleware</p></blockquote><h4 id="edit-the-app-http-controllers-auth-authenticatedsessioncontroller-php" tabindex="-1"><a class="header-anchor" href="#edit-the-app-http-controllers-auth-authenticatedsessioncontroller-php"><span>Edit the app/Http/Controllers/Auth/AuthenticatedSessionController.php</span></a></h4><blockquote><p>Change: login method</p></blockquote><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">from<span class="token punctuation">:</span> </span>
<span class="line"><span class="token variable">$request</span><span class="token operator">&gt;&gt;</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">regenerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">noContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">to<span class="token punctuation">:</span></span>
<span class="line"><span class="token variable">$token</span> <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">createToken</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;access_token&#39;</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span>plainTextToken<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;token&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$token</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Change: destroy method</p></blockquote><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">from<span class="token punctuation">:</span> </span>
<span class="line"><span class="token class-name static-context">Auth</span><span class="token operator">::</span><span class="token function">guard</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;web&#39;</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$request</span><span class="token operator">&gt;&gt;</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$request</span><span class="token operator">&gt;&gt;</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">regenerateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">noContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">to<span class="token punctuation">:</span></span>
<span class="line"><span class="token variable">$request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">currentAccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Token revoked!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="edit-the-app-http-controllers-auth-registeredusercontroller-php" tabindex="-1"><a class="header-anchor" href="#edit-the-app-http-controllers-auth-registeredusercontroller-php"><span>Edit the app/Http/Controllers/Auth/RegisteredUserController.php</span></a></h4><blockquote><p>Change: store method</p></blockquote><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">from<span class="token punctuation">:</span></span>
<span class="line">Auth<span class="token punctuation">:</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">noContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">to<span class="token punctuation">:</span></span>
<span class="line"><span class="token variable">$oken</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token operator">&gt;&gt;</span><span class="token function">createToken</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth_token&#39;</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span>plainTextToken<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;token&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$token</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="move-from-web-php-to-api-php-the-following-line" tabindex="-1"><a class="header-anchor" href="#move-from-web-php-to-api-php-the-following-line"><span>Move from web.php to api.php the following line:</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/auth.php&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="edit-the-routes-auth-php" tabindex="-1"><a class="header-anchor" href="#edit-the-routes-auth-php"><span>Edit the routes/auth.php</span></a></h4><blockquote><p>Change route logout</p></blockquote><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">from<span class="token punctuation">:</span></span>
<span class="line"><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">to<span class="token punctuation">:</span></span>
<span class="line"><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;auth:sanctum&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[p];function l(i,c){return a(),s("div",null,o)}const u=n(t,[["render",l],["__file","breeze.html.vue"]]),d=JSON.parse('{"path":"/laravel/breeze.html","title":"Breeze in API","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Install Breeze Package","slug":"install-breeze-package","link":"#install-breeze-package","children":[]},{"level":2,"title":"Install Breeze","slug":"install-breeze","link":"#install-breeze","children":[]},{"level":2,"title":"Configuring Breeze","slug":"configuring-breeze","link":"#configuring-breeze","children":[]}],"git":{"updatedTime":1722394000000,"contributors":[{"name":"Celso Nery","email":"celso.nery@gmail.com","commits":1}]},"filePathRelative":"laravel/breeze.md"}');export{u as comp,d as data};
